#include <stdio.h>
#include <stdlib.h>

// Define a structure for a binary tree node.
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

// Function to create a new node with the given data.
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Function to find the height of a BST.
int findHeight(struct Node* root) {
    if (root == NULL) {
        return -1; // Height of an empty tree is -1
    } else {
        int leftHeight = findHeight(root->left);
        int rightHeight = findHeight(root->right);
        return (leftHeight > rightHeight ? leftHeight : rightHeight) + 1;
    }
}

int main() {
    struct Node* root = createNode(50);
    root->left = createNode(30);
    root->right = createNode(70);
    root->left->left = createNode(20);
    root->left->right = createNode(40);
    root->right->left = createNode(60);
    root->right->right = createNode(80);

    int height = findHeight(root);
    printf("The height of the BST is: %d\n", height);

    return 0;
}
