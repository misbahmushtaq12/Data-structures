#include <stdio.h>
#include <stdlib.h>

// Define a structure for a circular linked list node.
struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node with the given data.
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = newNode;  // Point to itself to make it circular
    return newNode;
}

// Function to insert a node at the end of a circular linked list.
struct Node* insertEnd(struct Node* head, int data) {
    struct Node* newNode = createNode(data);
    if (head == NULL) {
        return newNode;
    }

    struct Node* tail = head;
    while (tail->next != head) {
        tail = tail->next;
    }

    tail->next = newNode;
    newNode->next = head;
    return head;
}

// Function to count the number of nodes in a circular linked list.
int countNodes(struct Node* head) {
    if (head == NULL) {
        return 0;
    }

    struct Node* current = head;
    int count = 0;

    do {
        count++;
        current = current->next;
    } while (current != head);

    return count;
}

int main() {
    struct Node* head = createNode(1);

    head = insertEnd(head, 2);
    head = insertEnd(head, 3);
    head = insertEnd(head, 4);

    printf("Circular Linked List:\n");
    displayList(head);

    int nodeCount = countNodes(head);
    printf("Number of nodes in the Circular Linked List: %d\n", nodeCount);

    return 0;
}
