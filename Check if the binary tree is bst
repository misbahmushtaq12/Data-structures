#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

// Define a structure for a binary tree node.
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

// Function to create a new node with the given data.
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Function to check if a binary tree is a BST.
bool isBST(struct Node* root, struct Node* prev) {
    if (root == NULL) return true;

    if (!isBST(root->left, prev)) return false;

    if (prev != NULL && root->data <= prev->data) return false;

    prev = root;

    return isBST(root->right, prev);
}

int main() {
    struct Node* root = createNode(50);
    root->left = createNode(30);
    root->right = createNode(70);
    root->left->left = createNode(20);
    root->left->right = createNode(40);
    root->right->left = createNode(60);
    root->right->right = createNode(80);

    struct Node* prev = NULL;
    if (isBST(root, prev)) {
        printf("The binary tree is a Binary Search Tree (BST).\n");
    } else {
        printf("The binary tree is not a BST.\n");
    }

    return 0;
}
