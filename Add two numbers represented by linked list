#include <stdio.h>
#include <stdlib.h>

// Define a structure for a singly linked list node.
struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node with the given data.
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to add two numbers represented by linked lists.
struct Node* addNumbers(struct Node* l1, struct Node* l2) {
    struct Node* result = NULL;
    struct Node* current = NULL;
    int carry = 0;

    while (l1 || l2 || carry) {
        int sum = carry;
        if (l1) {
            sum += l1->data;
            l1 = l1->next;
        }
        if (l2) {
            sum += l2->data;
            l2 = l2->next;
        }

        carry = sum / 10;
        struct Node* newNode = createNode(sum % 10);

        if (!result) {
            result = newNode;
            current = result;
        } else {
            current->next = newNode;
            current = newNode;
        }
    }

    return result;
}

// Function to display the linked list.
void displayList(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* l1 = createNode(2);
    l1->next = createNode(4);
    l1->next->next = createNode(3);

    struct Node* l2 = createNode(5);
    l2->next = createNode(6);
    l2->next->next = createNode(4);

    printf("Number 1:\n");
    displayList(l1);
    printf("Number 2:\n");
    displayList(l2);

    struct Node* result = addNumbers(l1, l2);

    printf("Sum of Numbers:\n");
    displayList(result);

    return 0;
}
